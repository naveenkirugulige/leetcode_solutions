/**
 * Definition for singly-linked list.
 * function ListNode(val, next) {
 *     this.val = (val===undefined ? 0 : val)
 *     this.next = (next===undefined ? null : next)
 * }
 */
/**
 * @param {ListNode} l1
 * @param {ListNode} l2
 * @return {ListNode}
 */
var mergeTwoLists = function(l1, l2) {
    
    if(!l1) return l2
    if(!l2) return l1
    
       let dummy= new ListNode(-1)
       let res=dummy
       
       while(l1 && l2){
           if(l1.val>l2.val) {
               dummy.next=new ListNode(l2.val)
               dummy=dummy.next
               l2=l2.next
           }
           else if (l2.val >l1.val){
               dummy.next=new ListNode(l1.val)
                 dummy=dummy.next
               l1=l1.next
           }
           
            else{
                  dummy.next=new ListNode(l1.val)
               dummy=dummy.next
               l1=l1.next
                  dummy.next=new ListNode(l2.val)
               dummy=dummy.next
               l2=l2.next
           
       }
       }

if(l1) dummy.next=l1
if(l2) dummy.next=l2
      
return res.next
      
};
